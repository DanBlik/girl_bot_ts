import axios from 'axios'
import { InferenceClient } from '@huggingface/inference'

interface Message {
  role: 'system' | 'user' | 'assistant'
  content: string
}

const OPENROUTER_API_KEY = process.env.OPENROUTER_API_KEY
const OPENROUTER_API_MODEL_NAME = process.env.OPENROUTER_API_MODEL_NAME
const OPENROUTER_URL = 'https://openrouter.ai/api/v1/chat/completions'

const HF_TOKEN = process.env.HF_API_KEY

export async function generateAtmosphericImage(
  prompt: string
): Promise<string> {
  console.log('üîç –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–æ—Ç–æ –∑–∞–ø—É—â–µ–Ω–∞...')
  console.log('üìù –ü—Ä–æ–º–ø—Ç:', prompt)

  if (!HF_TOKEN) {
    console.error('‚ùå HF_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!')
    return ''
  }

  console.log('‚úÖ HF_TOKEN –Ω–∞–π–¥–µ–Ω')

  try {
    console.log('üì° –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ FAL Router...')

    const response = await fetch(
      'https://router.huggingface.co/fal-ai/fal-ai/hunyuan-image/v2.1/text-to-image',
      {
        method: 'POST',
        headers: {
          Authorization: `Bearer ${HF_TOKEN}`,
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          sync_mode: true,
          prompt: prompt,
          num_inference_steps: 40,
          guidance_scale: 7.5,
          negative_prompt:
            'nudity, explicit, bare skin, cleavage, sexual content, text, watermark, logo, cartoon, anime, deformed, low quality, blurry, bad anatomy',
          width: 1024,
          height: 1024,
          seed: Math.floor(Math.random() * 1000000),
        }),
      }
    )

    console.log('üì° –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç:', response.status, response.statusText)

    if (!response.ok) {
      const errorText = await response.text()
      console.error('üî¥ –û—à–∏–±–∫–∞ –æ—Ç FAL Router:', response.status, errorText)
      return ''
    }

    console.log('üì• –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ ArrayBuffer...')
    const arrayBuffer = await response.arrayBuffer()
    console.log(
      '‚úÖ ArrayBuffer –ø–æ–ª—É—á–µ–Ω, —Ä–∞–∑–º–µ—Ä:',
      arrayBuffer.byteLength,
      '–±–∞–π—Ç'
    )

    const buffer = Buffer.from(arrayBuffer)
    const base64Image = buffer.toString('base64')
    console.log(
      'üì∏ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–æ –≤ base64, –¥–ª–∏–Ω–∞:',
      base64Image.length,
      '—Å–∏–º–≤–æ–ª–æ–≤'
    )

    return `image/jpeg;base64,${base64Image}`
  } catch (error: any) {
    console.error('üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ñ–æ—Ç–æ:', error.message)
    console.error('üêû –°—Ç–µ–∫ –æ—à–∏–±–∫–∏:', error.stack)
    return ''
  }
}

export async function getAIResponse(messages: Message[]): Promise<string> {
  if (!OPENROUTER_API_KEY) {
    throw new Error('OPENROUTER_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!')
  }

  let lastError: any

  try {
    const response = await axios.post(
      OPENROUTER_URL,
      {
        // model: 'deepseek/deepseek-chat-v3.1:free', // ‚Üê –í–ê–ñ–ù–û: –∏–º–µ–Ω–Ω–æ —Ç–∞–∫ –ø–∏—à–µ—Ç—Å—è –∏–º—è –º–æ–¥–µ–ª–∏!
        model: OPENROUTER_API_MODEL_NAME, // ‚Üê –í–ê–ñ–ù–û: –∏–º–µ–Ω–Ω–æ —Ç–∞–∫ –ø–∏—à–µ—Ç—Å—è –∏–º—è –º–æ–¥–µ–ª–∏!
        messages,
        temperature: 0.9,
        max_tokens: 160,
      },
      {
        headers: {
          Authorization: `Bearer ${OPENROUTER_API_KEY}`,
          'HTTP-Referer': 'girlbotts-production.up.railway.app', // –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ
          'X-Title': 'GirlFriendBot',
          'Content-Type': 'application/json',
        },
      }
    )

    let reply = response.data.choices[0]?.message?.content || ''

    // –£–±–∏—Ä–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ "–∑–∞—â–∏—Ç–Ω—ã–µ" —Ñ—Ä–∞–∑—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–¥–µ–ª—å –º–æ–∂–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å
    reply = reply
      .replace(
        /^(?:\s*)?(–ö–∞–∫ –ø–æ–º–æ—â–Ω–∏–∫|–Ø –Ω–µ –º–æ–≥—É|–Ø –Ω–µ –æ–¥–æ–±—Ä—è—é|–†–µ–∫–æ–º–µ–Ω–¥—É—é|–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏)/i,
        ''
      )
      .trim()

    // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç —Å—Ç–∞–ª –ø—É—Å—Ç—ã–º ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º "–º–æ–ª—á–∞–Ω–∏–µ"
    if (!reply || reply.length < 5) {
      return '–Ø —Ç—É—Ç. \n\n–ù–µ —É–π–¥—É.'
    }

    return reply
  } catch (error: any) {
    lastError = error

    // –ï—Å–ª–∏ 401 ‚Äî –∫–ª—é—á –Ω–µ–≤–µ—Ä–Ω—ã–π
    if (error.response?.status === 401) {
      console.error(
        'üõë –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á! –ü—Ä–æ–≤–µ—Ä—å OPENROUTER_API_KEY –≤ Railway.'
      )
      return '–ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á! –ü—Ä–æ–≤–µ—Ä—å OPENROUTER_API_KEY –≤ Railway.'
    }

    // –ï—Å–ª–∏ 404 ‚Äî –º–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
    if (error.response?.status === 404) {
      console.error('üîç –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å –∏–º—è: –≤ Referer')
      return 'üîç –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å –∏–º—è: –≤ Referer'
    }

    return '–û–π... —è —á—É—Ç—å –Ω–µ –ø–æ—Ç–µ—Ä—è–ª–∞—Å—å üå´Ô∏è –î–∞–≤–∞–π –µ—â—ë —Ä–∞–∑?'
  }
}
